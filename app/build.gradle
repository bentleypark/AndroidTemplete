//apply plugin: 'com.android.application'
//apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-android-extensions'
// https://docs.gradle.org/current/userguide/plugins.html
plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'com.github.ben-manes.versions' version "0.33.0"
}

apply from: "${rootProject.projectDir}/flavors.gradle"

android {
    compileSdkVersion Config.compileSdkVersion
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.bentley.androidtemplete"
        minSdkVersion Config.minSdkVersion
        targetSdkVersion Config.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    with flavorConfig

    buildFeatures {
        dataBinding = true
        viewBinding = true
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    lintOptions {
        abortOnError false
        disable 'UnsafeExperimentalUsageError', 'UnsafeExperimentalUsageWarning', 'ContentDescription'
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation project(Modules.commonUi)
    implementation project(Modules.commonUtils)
    implementation project(Modules.data)

    implementation Libs.kotlinStdLib
    implementation Libs.appcompat
    implementation Libs.coreKtx
    implementation Libs.constraintlayout

    implementation Libs.viewModel

    implementation Libs.coroutineAndroid
    implementation Libs.coroutineCore

    implementation Libs.retrofit
    implementation Libs.gson
    implementation Libs.gsonConverter
    implementation Libs.okhttp
    implementation Libs.loggingInterceptor

    // JetPack
    implementation Libs.startUp
    implementation Libs.navUi
    implementation Libs.navUiKtx
    implementation Libs.navFragment
    implementation Libs.navFragmentKtx

    // Debug
    implementation Libs.timber
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    debugImplementation Libs.leakcanary

    // Koin
    implementation Libs.koin
    implementation Libs.koinFragment
    implementation Libs.koinViewModel

    testImplementation Libs.junit4
    androidTestImplementation Libs.junitExt
    androidTestImplementation Libs.espressoCore
}

kapt {
    useBuildCache = true
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

dependencyUpdates {
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}